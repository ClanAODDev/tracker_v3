/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

eval("var Platoon = Platoon || {};\n\n(function ($) {\n\n    Platoon = {\n\n        setup: function () {\n            this.handleMembers();\n            this.handleSquadMembers();\n            this.handleForumActivityChart();\n            this.handleTSActivityChart();\n            this.initAutocomplete();\n        },\n\n        handleForumActivityChart: function () {\n\n            var ctx = $('.forum-activity-chart');\n\n            if (ctx.length) {\n                var myDoughnutChart = new Chart(ctx, {\n                    type: 'doughnut',\n                    data: {\n                        datasets: [\n                            {\n                                data: ctx.data('values'),\n                                backgroundColor: ctx.data('colors'),\n                                borderWidth: 0,\n                            }],\n                        labels: ctx.data('labels'),\n                    },\n                    options: {\n                        rotation: 1 * Math.PI,\n                        circumference: 1 * Math.PI,\n                        legend: {\n                            position: 'bottom',\n                            labels: {\n                                boxWidth: 5,\n                                fontColor: '#949ba2'\n                            },\n                            label: {\n                                fullWidth: false\n                            }\n                        }\n                    }\n                });\n            }\n        },\n        handleTSActivityChart: function () {\n\n            var ctx = $('.ts-activity-chart');\n\n            if (ctx.length) {\n                var myDoughnutChart = new Chart(ctx, {\n                    type: 'doughnut',\n                    data: {\n                        datasets: [\n                            {\n                                data: ctx.data('values'),\n                                backgroundColor: ctx.data('colors'),\n                                borderWidth: 0,\n                            }],\n                        labels: ctx.data('labels'),\n                    },\n                    options: {\n                        rotation: 1 * Math.PI,\n                        circumference: 1 * Math.PI,\n                        legend: {\n                            position: 'bottom',\n                            labels: {\n                                boxWidth: 5,\n                                fontColor: '#949ba2'\n                            },\n                            label: {\n                                fullWidth: false\n                            }\n                        }\n                    }\n                });\n            }\n        },\n        handleSquadMembers: function () {\n            $('.sortable-squad').sortable({\n                revert: 'invalid',\n            });\n\n            $('.draggable').draggable({\n                connectToSortable: 'ul',\n                revert: 'invalid',\n                scroll: true,\n                scrollSensitivity: 100\n            });\n\n            var itemMoved, targetSquad, senderLength, receiverLength;\n            $('.mod-plt .sortable').sortable({\n                connectWith: 'ul',\n                placeholder: 'ui-state-highlight',\n                forcePlaceholderSize: true,\n                revert: 'invalid',\n                receive: function (event, ui) {\n                    itemMoved = $(ui.item).attr('data-member-id');\n                    targetSquad = $(this).attr('data-squad-id');\n                    senderLength = $(ui.sender).find('li').length;\n                    receiverLength = $(this).find('li').length;\n                    if (undefined === targetSquad) {\n                        toastr.error('You cannot move members to the unassigned list');\n                        $('.mod-plt .sortable').sortable('cancel');\n                    } else {\n                        // is genpop empty?\n                        if ($('.genpop').find('li').length < 1) {\n                            $('.genpop').fadeOut();\n                        }\n                        // update squad counts\n                        $(ui.sender).parent().find('.count').text(senderLength);\n                        $(this).parent().find('.count').text(receiverLength).effect('highlight');\n                        $.ajax({\n                            type: 'POST',\n                            url: window.Laravel.appPath + '/members/assign-squad',\n                            data: {\n                                member_id: itemMoved,\n                                squad_id: targetSquad,\n                                _token: $('meta[name=csrf-token]').attr('content')\n                            },\n                            dataType: 'json',\n                            success: function () {\n                                toastr.success('Member reassigned!');\n                            },\n                            error: function () {\n                                toastr.error('Something bad happened...');\n                            }\n                        });\n                    }\n                }\n            });\n        },\n        initAutocomplete: function () {\n            $('#leader').bootcomplete({\n                url: window.Laravel.appPath + '/search-member/',\n                minLength: 3,\n                idField: true,\n                method: 'POST',\n                dataParams: {_token: $('meta[name=csrf-token]').attr('content')}\n            });\n        },\n\n        handleMembers: function () {\n\n            var platoonNum = parseInt($('.platoon-number').text()),\n                formattedDate = new Date(),\n                d = formattedDate.getDate(),\n                m = (formattedDate.getMonth() + 1),\n                y = formattedDate.getFullYear(),\n                nowDate = y + '-' + m + '-' + d,\n                selected = new Array();\n\n            /**\n             * Handle platoons, squads, members tables\n             */\n            if ($('.members-table').length) {\n                var dataTable = $('table.members-table').DataTable({\n                    'initComplete': function (settings, json) {\n                        setTimeout(function () {\n                            $('.ld-loading').removeClass('ld-loading');\n                        }, 2000);\n                    },\n                    autoWidth: true, bInfo: false,\n                    oLanguage: {\n                        sLengthMenu: '' // _MENU_\n                    },\n                    columnDefs: [{\n                        orderable: false,\n                        className: 'select-checkbox',\n                        targets: 0\n                    }, {\n                        targets: 'no-search', searchable: false\n                    }, {\n                        targets: 'col-hidden', visible: false\n                    }, {\n                        // sort rank by rank id\n                        'iDataSort': 0, 'aTargets': [3]\n                    }, {\n                        // sort activity by last login date\n                        'iDataSort': 1, 'aTargets': [5]\n                    },\n                        {\n                            // sort ts activity by date\n                            'iDataSort': 7, 'aTargets': [6]\n                        }\n                    ],\n                    select: {\n                        style: 'os',\n                        selector: 'td:first-child',\n                    },\n                    stateSave: true, paging: false,\n                });\n\n                $('a.toggle-vis').on('click', function (e) {\n                    e.preventDefault();\n\n                    // Get the column API object\n                    var column = dataTable.column($(this).attr('data-column'));\n\n                    // Toggle the visibility\n                    column.visible(!column.visible());\n                });\n\n                $('.dataTables_filter input').appendTo('#playerFilter').removeClass('input-sm');\n\n                $('#playerFilter input').attr({\n                    'placeholder': 'Search Players',\n                    'class': 'form-control'\n                });\n\n                $('.dataTables_filter label').remove();\n\n                $('.no-sort').removeClass('sorting');\n\n                // handle PM selection\n                dataTable.on(\"select\", function (e, t, a, d) {\n                    var l = dataTable.rows($(\".selected\")).data().toArray().map(function (e) {\n                        return e[11]\n                    });\n                    if (l.length >= 2) {\n                        $(\"#selected-data\").show(),\n                            $(\"#selected-data .status-text\").text(\"With selected (\" + l.length + \")\"),\n                            $(\"#pm-member-data\").val(l);\n                    }\n                });\n            }\n\n            // omit leader field if using TBA\n            $('#is_tba').click(function () {\n                toggleTBA();\n            });\n\n            toggleTBA();\n\n            function toggleTBA() {\n                if ($('#is_tba').is(':checked')) {\n                    $('#leader_id, #leader').prop('disabled', true).val('');\n                } else {\n                    $('#leader_id, #leader').prop('disabled', false);\n                }\n            }\n\n        },\n    };\n})(jQuery);\n\nPlatoon.setup();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }
/******/ ]);